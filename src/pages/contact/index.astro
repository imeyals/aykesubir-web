---
import config from "@/config/config.json";
import DynamicIcon from "@/helpers/DynamicIcon";
import Base from "@/layouts/Base.astro";
import PageHeader from "@/partials/PageHeader.astro";
import { getEntry } from "astro:content";

const { params } = config;
const contactIndex = await getEntry("contact", "-index");
const { title, meta_title, description, connect, card } = contactIndex.data;
---

<Base title={title} meta_title={meta_title} description={description}>
  <PageHeader title="Contact Us" />
  <section class="section bg-section">
    <div class="container">
      <h1 class="mb-10 text-center font-bold">{title}</h1>
      <div class="row g-4 lg:items-center lg:justify-between">
        {/* left side */}
        <div class="col-10 lg:col-6">
          <form method="POST" id="form" class="">
            <input type="hidden" name="access_key" value="33911f28-8ff6-4ad6-beab-a0873ede260a">
            <div class="mb-10">
              <label for="name" class="form-label">
                Name <span class="text-red-500">*</span>
              </label>
              <input
                id="name"
                name="name"
                class="form-input w-full border-0 border-b-2 border-border focus:border-primary focus:ring-transparent"
                placeholder="name"
                type="text"
              />
            </div>
            <div class="mb-10">
              <label for="email" class="form-label">
                Email <span class="text-red-500">*</span>
              </label>
              <input
                id="email"
                name="email"
                class="form-input w-full border-0 border-b-2 border-border focus:border-primary focus:ring-transparent"
                placeholder="john.doe@email.com"
                type="email"
              />
            </div>
            <div class="mb-10">
              <label for="message" class="form-label">
                Message <span class="text-red-500">*</span>
              </label>
              <textarea
                id="message"
                name="message"
                class="form-input w-full border-0 border-b-2 border-border focus:border-primary focus:ring-transparent"
                placeholder="Write here your details message..."
                rows={4} required></textarea>
              <input type="checkbox" name="botcheck" class="hidden" style="display: none;">
            </div>
            <button type="submit" class="btn btn-primary"> Send message</button>
            <div id="result"></div>
          </form>

          <script is:inline>
            const form = document.getElementById('form');
            const result = document.getElementById('result');
            
            form.addEventListener('submit', function(e) {
                const formData = new FormData(form);
                e.preventDefault();
            
                const object = Object.fromEntries(formData);
                const json = JSON.stringify(object);
            
                result.innerHTML = "Please wait..."
            
                fetch('https://api.web3forms.com/submit', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: json
                    })
                    .then(async (response) => {
                        let json = await response.json();
                        if (response.status == 200) {
                            result.innerHTML = json.message;
                        } else {
                            console.log(response);
                            result.innerHTML = json.message;
                        }
                    })
                    .catch(error => {
                        console.log(error);
                        result.innerHTML = "Something went wrong!";
                    })
                    .then(function() {
                        form.reset();
                        setTimeout(() => {
                            result.style.display = "none";
                        }, 3000);
                    });
            });
            </script>
        </div>

        {/* right side */}
        <div class="col-10 lg:col-4">
          <h3 class="mb-4 font-extrabold">
            {connect.title}
          </h3>
          <p class="mb-10">{connect.description}</p>

          {
            connect.contact.map((c: { icon: string; label: string }) => (
              <div class="mb-4 flex items-center">
                <DynamicIcon
                  icon={c.icon}
                  className="mr-2 rounded bg-primary p-2 text-3xl"
                />
                <p>{c.label}</p>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

</Base>
